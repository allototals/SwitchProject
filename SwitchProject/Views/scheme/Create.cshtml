@model SwitchProject.Models.ResultMessages<SwitchProject.Models.schemeViewModel>
    @*SwitchProject.Models.schemeViewModel*@

@{
    ViewBag.Title = "Create";
    
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Schemes</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Data.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Data.Name)
                @Html.ValidationMessageFor(model => model.Data.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Data.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Data.Description)
                @Html.ValidationMessageFor(model => model.Data.Description)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Data.RoutesId, new {@class="control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Data.RoutesId, (IEnumerable<SelectListItem>)ViewBag.routes, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Data.RoutesId)
 
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Data.ChannelId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Data.ChannelId, (IEnumerable<SelectListItem>)ViewBag.channels, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Data.ChannelId)

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Data.FeesId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Data.FeesId, (IEnumerable<SelectListItem>)ViewBag.fees, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Data.FeesId)

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Data.TransTypeId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Data.TransTypeId, (IEnumerable<SelectListItem>)ViewBag.trans, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Data.TransTypeId)

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <div class="alert-success">@Model.Message</div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
